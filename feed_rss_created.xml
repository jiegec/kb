<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Jiegec&#39;s Knowledge Base</title><description>Knowledge Base of @jiegec</description><link>https://jia.je/kb/</link><atom:link href="https://jia.je/kb/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/jiegec/kb</docs><language>en</language> <pubDate>Wed, 23 Jul 2025 05:12:35 -0000</pubDate> <lastBuildDate>Wed, 23 Jul 2025 05:12:35 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.3</generator> <image> <url>None</url> <title>Jiegec's Knowledge Base</title><link>https://jia.je/kb/</link> </image> <item> <title>红烧冬瓜</title> <description>&lt;h1&gt;红烧冬瓜&lt;/h1&gt;&lt;h2&gt;食材&lt;/h2&gt;&lt;p&gt;冬瓜 杭椒&lt;/p&gt;&lt;h2&gt;步骤&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;处理切片冬瓜：去瓤，去皮，把靠近皮的比较硬的一侧，划几刀，方便入味&lt;/li&gt;&lt;li&gt;把杭椒切成小辣椒圈，加入盐、蒜、生抽、老抽、耗油，搅拌均匀备用&lt;/li&gt;&lt;li&gt;下锅，加油和盐，把冬瓜硬的一侧朝下码放，然后中火慢煎，新鲜冬瓜会出水不怕糊，用筷子调整位置，等到底部变黄...&lt;/li&gt;&lt;/ol&gt;</description><link>https://jia.je/kb/cooking/hongshaodonggua.html</link> <pubDate>Thu, 17 Jul 2025 04:56:22 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/cooking/hongshaodonggua.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/cooking/hongshaodonggua.png" type="image/png" length="38909" /> </item> <item> <title>红烧冬瓜</title> <description>&lt;h1&gt;红烧冬瓜&lt;/h1&gt;&lt;h2&gt;食材&lt;/h2&gt;&lt;p&gt;冬瓜 杭椒&lt;/p&gt;&lt;h2&gt;步骤&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;处理切片冬瓜：去瓤，去皮，把靠近皮的比较硬的一侧，划几刀，方便入味&lt;/li&gt;&lt;li&gt;把杭椒切成小辣椒圈，加入盐、蒜、生抽、老抽、耗油，搅拌均匀备用&lt;/li&gt;&lt;li&gt;下锅，加油和盐，把冬瓜硬的一侧朝下码放，然后中火慢煎，新鲜冬瓜会出水不怕糊，用筷子调整位置，等到底部变黄...&lt;/li&gt;&lt;/ol&gt;</description><link>https://jia.je/kb/en/cooking/hongshaodonggua.html</link> <pubDate>Thu, 17 Jul 2025 04:56:22 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/cooking/hongshaodonggua.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/cooking/hongshaodonggua.png" type="image/png" length="38909" /> </item> <item> <title>红烧冬瓜</title> <description>&lt;h1&gt;红烧冬瓜&lt;/h1&gt;&lt;h2&gt;食材&lt;/h2&gt;&lt;p&gt;冬瓜 杭椒&lt;/p&gt;&lt;h2&gt;步骤&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;处理切片冬瓜：去瓤，去皮，把靠近皮的比较硬的一侧，划几刀，方便入味&lt;/li&gt;&lt;li&gt;把杭椒切成小辣椒圈，加入盐、蒜、生抽、老抽、耗油，搅拌均匀备用&lt;/li&gt;&lt;li&gt;下锅，加油和盐，把冬瓜硬的一侧朝下码放，然后中火慢煎，新鲜冬瓜会出水不怕糊，用筷子调整位置，等到底部变黄...&lt;/li&gt;&lt;/ol&gt;</description><link>https://jia.je/kb/cooking/hongshaodonggua.html</link> <pubDate>Thu, 17 Jul 2025 04:56:22 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/cooking/hongshaodonggua.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/cooking/hongshaodonggua.png" type="image/png" length="40492" /> </item> <item> <title>RCU (Read-Copy-Update) 总结</title> <description>&lt;h1&gt;RCU (Read-Copy-Update) 总结&lt;/h1&gt;&lt;p&gt;RCU 是一种读写锁的替代方案，主要针对以读为主的 workload，它的思路是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;writer 要更新被保护的对象的时候，不修改已有的对象，而是生成一个新的 copy，然后原子地进行对象引用的替换；那么 reader 此时依然可以正常访问对象，只不...&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/kb/software/read_copy_update.html</link> <pubDate>Mon, 14 Jul 2025 17:00:13 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/read_copy_update.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/read_copy_update.png" type="image/png" length="50185" /> </item> <item> <title>RCU (Read-Copy-Update) 总结</title> <description>&lt;h1&gt;RCU (Read-Copy-Update) 总结&lt;/h1&gt;&lt;p&gt;RCU 是一种读写锁的替代方案，主要针对以读为主的 workload，它的思路是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;writer 要更新被保护的对象的时候，不修改已有的对象，而是生成一个新的 copy，然后原子地进行对象引用的替换；那么 reader 此时依然可以正常访问对象，只不...&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/kb/en/software/read_copy_update.html</link> <pubDate>Mon, 14 Jul 2025 17:00:13 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/software/read_copy_update.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/read_copy_update.png" type="image/png" length="50185" /> </item> <item> <title>RCU (Read-Copy-Update) 总结</title> <description>&lt;h1&gt;RCU (Read-Copy-Update) 总结&lt;/h1&gt;&lt;p&gt;RCU 是一种读写锁的替代方案，主要针对以读为主的 workload，它的思路是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;writer 要更新被保护的对象的时候，不修改已有的对象，而是生成一个新的 copy，然后原子地进行对象引用的替换；那么 reader 此时依然可以正常访问对象，只不...&lt;/li&gt;&lt;/ul&gt;</description><link>https://jia.je/kb/software/read_copy_update.html</link> <pubDate>Mon, 14 Jul 2025 17:00:13 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/read_copy_update.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/read_copy_update.png" type="image/png" length="51767" /> </item> <item> <title>Linux Kernel Memory Barriers 总结</title> <description>&lt;h1&gt;Linux Kernel Memory Barriers 总结&lt;/h1&gt;&lt;p&gt;本文是对 &lt;a href=&#34;https://www.kernel.org/doc/Documentation/memory-barriers.txt&#34;&gt;Linux Kernel Memory Barriers&lt;/a&gt; 一文的总结。&lt;/p&gt;&lt;h2&gt;Abstract Memo...&lt;/h2&gt;</description><link>https://jia.je/kb/software/linux_kernel_memory_barriers.html</link> <pubDate>Mon, 14 Jul 2025 02:04:52 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/linux_kernel_memory_barriers.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/linux_kernel_memory_barriers.png" type="image/png" length="50827" /> </item> <item> <title>Linux Kernel Memory Barriers 总结</title> <description>&lt;h1&gt;Linux Kernel Memory Barriers 总结&lt;/h1&gt;&lt;p&gt;本文是对 &lt;a href=&#34;https://www.kernel.org/doc/Documentation/memory-barriers.txt&#34;&gt;Linux Kernel Memory Barriers&lt;/a&gt; 一文的总结。&lt;/p&gt;&lt;h2&gt;Abstract Memo...&lt;/h2&gt;</description><link>https://jia.je/kb/en/software/linux_kernel_memory_barriers.html</link> <pubDate>Mon, 14 Jul 2025 02:04:52 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/software/linux_kernel_memory_barriers.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/linux_kernel_memory_barriers.png" type="image/png" length="50827" /> </item> <item> <title>Linux Kernel Memory Barriers 总结</title> <description>&lt;h1&gt;Linux Kernel Memory Barriers 总结&lt;/h1&gt;&lt;p&gt;本文是对 &lt;a href=&#34;https://www.kernel.org/doc/Documentation/memory-barriers.txt&#34;&gt;Linux Kernel Memory Barriers&lt;/a&gt; 一文的总结。&lt;/p&gt;&lt;h2&gt;Abstract Memo...&lt;/h2&gt;</description><link>https://jia.je/kb/software/linux_kernel_memory_barriers.html</link> <pubDate>Mon, 14 Jul 2025 02:04:52 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/linux_kernel_memory_barriers.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/linux_kernel_memory_barriers.png" type="image/png" length="52406" /> </item> <item> <title>AWS Pricing</title> <description>&lt;h1&gt;AWS Pricing&lt;/h1&gt;&lt;h2&gt;RDBMS&lt;/h2&gt;&lt;h3&gt;Amazon Aurora&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/rds/aurora/pricing/&#34;&gt;Amazon Aurora Pricing&lt;/a&gt; [Pricing Calculator](https://calculator.aws/#...&lt;/p&gt;</description><link>https://jia.je/kb/software/aws_pricing.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/aws_pricing.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/aws_pricing.png" type="image/png" length="38267" /> </item> <item> <title>Lock Free 数据结构</title> <description>&lt;h1&gt;Lock Free 数据结构&lt;/h1&gt;&lt;h2&gt;Treiber Stack&lt;/h2&gt;&lt;p&gt;Treiber Stack 是一个 Lock-Free 的 Stack，支持 Push 和 Pop 操作，由 R. Kent Treiber 在 1986 年提出，出现在 [Systems Programming: Coping With P...&lt;/p&gt;</description><link>https://jia.je/kb/software/lock_free.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/lock_free.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/lock_free.png" type="image/png" length="43892" /> </item> <item> <title>AWS Pricing</title> <description>&lt;h1&gt;AWS Pricing&lt;/h1&gt;&lt;h2&gt;RDBMS&lt;/h2&gt;&lt;h3&gt;Amazon Aurora&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/rds/aurora/pricing/&#34;&gt;Amazon Aurora Pricing&lt;/a&gt; [Pricing Calculator](https://calculator.aws/#...&lt;/p&gt;</description><link>https://jia.je/kb/en/software/aws_pricing.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/software/aws_pricing.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/aws_pricing.png" type="image/png" length="36650" /> </item> <item> <title>Lock Free 数据结构</title> <description>&lt;h1&gt;Lock Free 数据结构&lt;/h1&gt;&lt;h2&gt;Treiber Stack&lt;/h2&gt;&lt;p&gt;Treiber Stack 是一个 Lock-Free 的 Stack，支持 Push 和 Pop 操作，由 R. Kent Treiber 在 1986 年提出，出现在 [Systems Programming: Coping With P...&lt;/p&gt;</description><link>https://jia.je/kb/en/software/lock_free.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/software/lock_free.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/lock_free.png" type="image/png" length="43892" /> </item> <item> <title>AWS Pricing</title> <description>&lt;h1&gt;AWS Pricing&lt;/h1&gt;&lt;h2&gt;RDBMS&lt;/h2&gt;&lt;h3&gt;Amazon Aurora&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/rds/aurora/pricing/&#34;&gt;Amazon Aurora Pricing&lt;/a&gt; [Pricing Calculator](https://calculator.aws/#...&lt;/p&gt;</description><link>https://jia.je/kb/software/aws_pricing.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/aws_pricing.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/aws_pricing.png" type="image/png" length="38267" /> </item> <item> <title>Lock Free 数据结构</title> <description>&lt;h1&gt;Lock Free 数据结构&lt;/h1&gt;&lt;h2&gt;Treiber Stack&lt;/h2&gt;&lt;p&gt;Treiber Stack 是一个 Lock-Free 的 Stack，支持 Push 和 Pop 操作，由 R. Kent Treiber 在 1986 年提出，出现在 [Systems Programming: Coping With P...&lt;/p&gt;</description><link>https://jia.je/kb/software/lock_free.html</link> <pubDate>Sun, 13 Jul 2025 09:54:58 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/lock_free.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/lock_free.png" type="image/png" length="45475" /> </item> <item> <title>缓存替换策略</title> <description>&lt;h1&gt;缓存替换策略&lt;/h1&gt;&lt;h2&gt;LRU(Least Recently Used)&lt;/h2&gt;&lt;p&gt;每个元素维护一个最后一次访问的时间。每次访问一个元素，就更新它最后一次访问的时间。替换的时候，选择最后一次访问的时间最早的那一个元素去替换。&lt;/p&gt;&lt;p&gt;为了优先替换非法元素，非法元素的访问时间视为比合法元素的访问时间都更早。&lt;/p&gt;&lt;h2&gt;PLRU(...&lt;/h2&gt;</description><link>https://jia.je/kb/hardware/cache_replacement_policy.html</link> <pubDate>Thu, 03 Jul 2025 15:06:57 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/hardware/cache_replacement_policy.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/hardware/cache_replacement_policy.png" type="image/png" length="42423" /> </item> <item> <title>缓存替换策略</title> <description>&lt;h1&gt;缓存替换策略&lt;/h1&gt;&lt;h2&gt;LRU(Least Recently Used)&lt;/h2&gt;&lt;p&gt;每个元素维护一个最后一次访问的时间。每次访问一个元素，就更新它最后一次访问的时间。替换的时候，选择最后一次访问的时间最早的那一个元素去替换。&lt;/p&gt;&lt;p&gt;为了优先替换非法元素，非法元素的访问时间视为比合法元素的访问时间都更早。&lt;/p&gt;&lt;h2&gt;PLRU(...&lt;/h2&gt;</description><link>https://jia.je/kb/en/hardware/cache_replacement_policy.html</link> <pubDate>Thu, 03 Jul 2025 15:06:57 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/hardware/cache_replacement_policy.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/hardware/cache_replacement_policy.png" type="image/png" length="42423" /> </item> <item> <title>缓存替换策略</title> <description>&lt;h1&gt;缓存替换策略&lt;/h1&gt;&lt;h2&gt;LRU(Least Recently Used)&lt;/h2&gt;&lt;p&gt;每个元素维护一个最后一次访问的时间。每次访问一个元素，就更新它最后一次访问的时间。替换的时候，选择最后一次访问的时间最早的那一个元素去替换。&lt;/p&gt;&lt;p&gt;为了优先替换非法元素，非法元素的访问时间视为比合法元素的访问时间都更早。&lt;/p&gt;&lt;h2&gt;PLRU(...&lt;/h2&gt;</description><link>https://jia.je/kb/hardware/cache_replacement_policy.html</link> <pubDate>Thu, 03 Jul 2025 15:06:57 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/hardware/cache_replacement_policy.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/hardware/cache_replacement_policy.png" type="image/png" length="44009" /> </item> <item> <title>CTF 常用信息</title> <description>&lt;h1&gt;CTF 常用信息&lt;/h1&gt;&lt;h2&gt;general&lt;/h2&gt;&lt;h3&gt;return oriented programming&lt;/h3&gt;&lt;p&gt;利用 x86 的特性，可以找到一系列 gadget，几条简单的指令，其中最后一条指令是 ret。在栈溢出的时候，通过构造栈，把要执行的一系列的 gadget 的地址放在栈上，使得函数在返回了以后，会按...&lt;/p&gt;</description><link>https://jia.je/kb/software/ctf.html</link> <pubDate>Sun, 01 Jun 2025 12:46:53 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/software/ctf.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/ctf.png" type="image/png" length="32575" /> </item> <item> <title>CTF 常用信息</title> <description>&lt;h1&gt;CTF 常用信息&lt;/h1&gt;&lt;h2&gt;general&lt;/h2&gt;&lt;h3&gt;return oriented programming&lt;/h3&gt;&lt;p&gt;利用 x86 的特性，可以找到一系列 gadget，几条简单的指令，其中最后一条指令是 ret。在栈溢出的时候，通过构造栈，把要执行的一系列的 gadget 的地址放在栈上，使得函数在返回了以后，会按...&lt;/p&gt;</description><link>https://jia.je/kb/en/software/ctf.html</link> <pubDate>Sun, 01 Jun 2025 12:46:53 +0000</pubDate><source url="https://jia.je/kb/feed_rss_created.xml">Jiegec's Knowledge Base</source><guid isPermaLink="true">https://jia.je/kb/en/software/ctf.html</guid> <enclosure url="https://jia.je/kb/assets/images/social/software/ctf.png" type="image/png" length="32575" /> </item> </channel></rss>